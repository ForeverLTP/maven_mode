<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdcom.server.mapper.ManagerMapper">
	<sql id="user">u.userId,userName,userPwd,uIsLock,uSalt,uIsManage</sql>
	<sql id="insertuser">userId,userName,userPwd,uIsLock,uSalt,uIsManage</sql>
	<!-- 查询数据 -->
	<select id="getSaltByUname" parameterType="String" resultType="org.common.model.server.User">
		select uSalt from t_user where userName = #{userName}
	</select>
	<resultMap type="org.common.model.server.User" id="userMap">
		<id column="userId" jdbcType="INTEGER" property="userId"/>
		<result column="userName" jdbcType="VARCHAR" property="userName"/>
		<result column="userPwd" jdbcType="VARCHAR" property="userPwd"/>
		<result column="uSalt" jdbcType="BLOB" property="uSalt"/>
		<result column="uIsLock" jdbcType="CHAR" property="uIsLock"/>
		<result column="uIsManage" jdbcType="CHAR" property="uIsManage"/>
		<result column="logTime" jdbcType="TIMESTAMP" property="logTime"/>
		<collection  property="roleList" ofType="org.common.model.Role">
			<result column="role" jdbcType="VARCHAR" property="role"/>
			<collection property="permissionList" ofType="org.common.model.Permission">
				<result column="permission" jdbcType="VARCHAR" property="permission"/>
			</collection>
		</collection>
	</resultMap>
	<resultMap type="org.common.model.Role" id="roleMap">
		<id column="roleId" jdbcType="INTEGER" property="roleId"/>
		<id column="userId" jdbcType="INTEGER" property="userId"/>
		<result column="role" jdbcType="VARCHAR" property="role"/>
		<collection property="permissionList" ofType="org.common.model.Permission">
			<id column="pId" jdbcType="INTEGER" property="pId"/>
			<result column="permission" jdbcType="VARCHAR" property="permission"/>
		</collection>
	</resultMap>
	
	<select id="getUserInfoByUid" parameterType="Integer" resultMap="userMap">
		select u.userId,userName,userPwd,uSalt,uIsLock,role,permission,max(logTime)logTime,uIsManage 
		from t_user u left join t_role r on u.userId = r.userId left join t_permission p on 
		r.roleId = p.roleId left join t_log l on u.userId = l.userId where u.userId = #{userId} GROUP BY u.userId
	</select>
	<select id="getAllRoleInfo"  resultMap="roleMap">
		select r.roleId,userId,role,pId,permission 
		from  t_role r  left join t_permission p on 
		r.roleId = p.roleId 
	</select>
	<select id="getUserByUid" parameterType="Integer" resultType="org.common.model.server.User">
		select <include refid="user"></include>,max(logTime)logTime from t_user u,t_log l where u.userId = l.userId and u.userId = #{userId} GROUP BY u.userId
	</select>
	<select id="getUserByUname" parameterType="String" resultType="org.common.model.server.User">
		select <include refid="user"></include>,max(logTime)logTime from t_user u,t_log l where u.userId = l.userId and u.userName = #{userName} GROUP BY u.userId
	</select>
	<select id="getUsers"  resultMap="userMap">
		select <include refid="user"></include>,max(logTime)logTime,role from t_user u  left join t_role r on r.userId = u.userId left join t_log l on u.userId = l.userId GROUP BY u.userId,role
	</select>
	<select id="getUserInfoByUname" parameterType="String" resultMap="userMap">
		select u.userId,userName,userPwd,uSalt,uIsLock,role,permission,max(logTime)logTime,uIsManage 
		from t_user u left join t_role r on u.userId = r.userId left join t_permission p on 
		r.roleId = p.roleId where userName = #{userName} GROUP BY u.userId
	</select>
	<!-- 插入数据 -->
	<insert id="registerUser" parameterType="org.common.model.server.User">
		insert   into t_user( <include refid="insertuser"></include> ) values(#{userId},#{userName},#{userPwd},#{uIsLock},#{uSalt},#{uIsManage})
	</insert>
	<!-- 修改数据 -->
	<update id="changeUser" parameterType="org.common.model.server.User">
		update t_user set userName = #{userName},uIsLock = #{uIsLock} where userId = #{userId}
	</update>
	<!-- 删除数据 -->
	<delete id="deleteUserByUid" parameterType="Integer">
		delete from t_user where uId = #{userId}
	</delete>
	<delete id="deleteUserByUname" parameterType="String">
		delete from t_user where userName = #{userName}
	</delete>
	<select id="getFuzzyUsersByUid" parameterType="String" resultMap="userMap">
		SELECT <include refid="user"></include>,max(logTime)logTime,role FROM t_user u left join t_role r on r.userId = u.userId left join t_log l on u.userId = l.userId WHERE LOCATE(#{value}, u.userId)>0 GROUP BY u.userId,role
	</select>
	<select id="getFuzzyUserByUname" parameterType="String" resultMap="userMap">
		SELECT <include refid="user"></include>,max(logTime)logTime,role FROM t_user u left join t_role r on r.userId = u.userId left join t_log l on u.userId = l.userId WHERE LOCATE(#{value}, u.userName)>0 GROUP BY u.userId,role
	</select>
	<select id="getLastMaxId" resultType="Integer">
		select max(userId) from t_user
	</select>
	<select id="getLogLastMaxId" resultType="Integer">
	  	select max(logId) logId from t_log 
	 </select>
	 
	 <insert id="insertLog" parameterType="org.common.model.Log">
   
	    insert into t_log (logId, userId, logType, 
	      logMessage, logIsError, logTime
	      )
	    values (#{logid,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{logtype,jdbcType=VARCHAR}, 
	      #{logmessage,jdbcType=VARCHAR}, #{logiserror,jdbcType=CHAR}, #{logtime,jdbcType=TIMESTAMP}
	      )
	 </insert>
	 <select id="getFuzzyRoleByUid" resultMap="roleMap" parameterType="String">
	 	select r.roleId,role,pId,permission 
		from  t_role r  left join t_permission p on 
		r.roleId = p.roleId WHERE LOCATE(#{value}, r.roleId)>0
	 </select>
	 <select id="getFuzzyRoleByUname" resultMap="roleMap" parameterType="String">
	 	select r.roleId,role,pId,permission 
		from  t_role r  left join t_permission p on 
		r.roleId = p.roleId WHERE LOCATE(#{value}, userName)>0  
	 </select>
	 <delete id="deletePermission" parameterType="org.common.model.Permission">
		delete from t_permission where roleId = #{roleId} and permission = #{permission}
	</delete>
	 <delete id="addPermission" parameterType="org.common.model.Permission">
		insert into t_permission(pId,permission,roleId) values(#{pId},#{permission},#{roleId})
	</delete>
	<select id="getMaxPermission" resultType="org.common.model.Permission">
		select max(pId)pId from t_permission
	</select>
	<insert id="addRole" parameterType="org.common.model.Role">
		insert into t_role(userId,roleId,role) values(#{userId},#{roleId},#{role})
	</insert>
	<select id="getMaxRoleId" resultType="org.common.model.Role">
		select max(roleId)roleId from t_role
	</select>
	<delete id="deleteRole" parameterType="org.common.model.Role">
		delete from t_role where userId = #{userId} and role = #{role}
	</delete>
</mapper>
